@model OuiFund.Models.QuestionViewModel
@{
    ViewBag.Title = "CreateQuestion";
}

<h2>Ajouter Question</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.question.DescriptionQuest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.question.DescriptionQuest, new { htmlAttributes = new { @class = "form-control", @style = "width: 450px;" } })
                @Html.ValidationMessageFor(model => model.question.DescriptionQuest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.question.ReferenceQuest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.question.ReferenceQuest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.question.ReferenceQuest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.question.StatusQuest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.question.StatusQuest)
                    @Html.ValidationMessageFor(model => model.question.StatusQuest, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.question.categorieId, "Catégorie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.question.categorieId, (SelectList)ViewBag.Categs, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.question.categorieId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.question.TypeQuest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.question.TypeQuest, "", htmlAttributes: new { id = "typeQuestId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.question.TypeQuest, "", new { @class = "text-danger" })
            </div>
        </div>

            <div id="qcm" style="display:none">
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.reponse.TextReponse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.reponse.TextReponse, new { htmlAttributes = new { @class = "form-control col-md-4" } })
                            @Html.ValidationMessageFor(model => model.reponse.TextReponse, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.reponse.ValeurReponse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.reponse.ValeurReponse, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.reponse.ValeurReponse, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.reponse.AnalyseReponse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.reponse.AnalyseReponse, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.reponse.AnalyseReponse, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div id="noted" style="display:none">
                <p>form to add noted question</p>
            </div>
            <div id="redact" style="display:none">
                <p>form to add redaction question</p>
            </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ajouter" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
@Scripts.Render("~/Scripts/Views/QuestionAdd.js")